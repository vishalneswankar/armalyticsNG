{
  "version": 3,
  "sources": ["../../../../../node_modules/@progress/kendo-angular-icons/fesm2015/progress-kendo-angular-icons.mjs"],
  "sourcesContent": ["/**-----------------------------------------------------------------------------------------\n* Copyright © 2024 Progress Software Corporation. All rights reserved.\n* Licensed under commercial license. See LICENSE.md in the project root for more information\n*-------------------------------------------------------------------------------------------*/\nimport * as i0 from '@angular/core';\nimport { Directive, HostBinding, Input, Component, isDevMode, ChangeDetectionStrategy, InjectionToken, Injectable, Optional, Inject, NgModule } from '@angular/core';\nimport { isDocumentAvailable } from '@progress/kendo-angular-common';\nimport { validatePackage } from '@progress/kendo-licensing';\nimport * as i1 from '@angular/platform-browser';\nimport * as i3 from '@angular/common';\nimport { CommonModule } from '@angular/common';\nimport { Subject, BehaviorSubject, Subscription } from 'rxjs';\nimport { map, tap } from 'rxjs/operators';\n\n/**\n * @hidden\n */\nfunction SVGIconComponent__svg_svg_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelement(0, \"svg\", 1);\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵstyleProp(\"pointer-events\", \"none\");\n    i0.ɵɵproperty(\"innerHTML\", ctx_r0.content, i0.ɵɵsanitizeHtml);\n    i0.ɵɵattribute(\"viewBox\", ctx_r0.icon.viewBox);\n  }\n}\nfunction IconWrapperComponent_kendo_svgicon_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"kendo-svgicon\", 3);\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"ngClass\", ctx_r0.innerCssClass)(\"icon\", ctx_r0.svgIcon)(\"size\", ctx_r0.size || (ctx_r0.iconSettings == null ? null : ctx_r0.iconSettings.size))(\"themeColor\", ctx_r0.iconSettings == null ? null : ctx_r0.iconSettings.themeColor)(\"flip\", ctx_r0.iconSettings == null ? null : ctx_r0.iconSettings.flip);\n  }\n}\nfunction IconWrapperComponent_ng_template_1_kendo_icon_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"kendo-icon\", 5);\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext(2);\n    i0.ɵɵproperty(\"ngClass\", ctx_r0.innerCssClass)(\"name\", ctx_r0.name)(\"size\", ctx_r0.size || (ctx_r0.iconSettings == null ? null : ctx_r0.iconSettings.size))(\"themeColor\", ctx_r0.iconSettings == null ? null : ctx_r0.iconSettings.themeColor)(\"flip\", ctx_r0.iconSettings == null ? null : ctx_r0.iconSettings.flip);\n  }\n}\nfunction IconWrapperComponent_ng_template_1_ng_template_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"span\", 6);\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext(2);\n    i0.ɵɵproperty(\"ngClass\", ctx_r0.customClasses);\n  }\n}\nfunction IconWrapperComponent_ng_template_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtemplate(0, IconWrapperComponent_ng_template_1_kendo_icon_0_Template, 1, 5, \"kendo-icon\", 4)(1, IconWrapperComponent_ng_template_1_ng_template_1_Template, 1, 1, \"ng-template\", null, 1, i0.ɵɵtemplateRefExtractor);\n  }\n  if (rf & 2) {\n    const custom_r2 = i0.ɵɵreference(2);\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"ngIf\", !ctx_r0.customFontIconClass)(\"ngIfElse\", custom_r2);\n  }\n}\nconst packageMetadata = {\n  name: '@progress/kendo-angular-icons',\n  productName: 'Kendo UI for Angular',\n  productCodes: ['KENDOUIANGULAR', 'KENDOUICOMPLETE'],\n  publishDate: 1720607719,\n  version: '16.4.0',\n  licensingDocsUrl: 'https://www.telerik.com/kendo-angular-ui/my-license/'\n};\nconst sizeClasses = {\n  'default': 'k-icon',\n  'xsmall': 'k-icon-xs',\n  'small': 'k-icon-sm',\n  'medium': 'k-icon-md',\n  'large': 'k-icon-lg',\n  'xlarge': 'k-icon-xl',\n  'xxlarge': 'k-icon-xxl',\n  'xxxlarge': 'k-icon-xxxl'\n};\n/**\n * @hidden\n */\nclass IconBaseDirective {\n  constructor(element, renderer) {\n    this.element = element;\n    this.renderer = renderer;\n    validatePackage(packageMetadata);\n  }\n  get horizontalFlip() {\n    return this.flip === 'horizontal' || this.flip === 'both';\n  }\n  get verticalFlip() {\n    return this.flip === 'vertical' || this.flip === 'both';\n  }\n  /**\n   * Specifies the theme color for the Icon.\n   *\n   * The possible values are:\n   * * `inherit` (Default)&mdash;Applies coloring based on the current color.\n   * * `primary` &mdash;Applies coloring based on primary theme color.\n   * * `secondary`&mdash;Applies coloring based on secondary theme color.\n   * * `tertiary`&mdash; Applies coloring based on tertiary theme color.\n   * * `info`&mdash;Applies coloring based on info theme color.\n   * * `success`&mdash; Applies coloring based on success theme color.\n   * * `warning`&mdash; Applies coloring based on warning theme color.\n   * * `error`&mdash; Applies coloring based on error theme color.\n   * * `dark`&mdash; Applies coloring based on dark theme color.\n   * * `light`&mdash; Applies coloring based on light theme color.\n   * * `inverse`&mdash; Applies coloring based on inverse theme color.\n   *\n   */\n  set themeColor(themeColor) {\n    const element = this.element.nativeElement;\n    if (this._themeColor) {\n      this.renderer.removeClass(element, `!k-color-${this._themeColor}`);\n    }\n    this._themeColor = themeColor;\n    // needed to ensure the theme color will be always applied; e.g. the class .k-button-icon, specific\n    // for icon buttons applies \"color: inherit\" which overwrites the theme color\n    if (themeColor) {\n      this.renderer.addClass(element, `!k-color-${themeColor}`);\n    }\n  }\n  get themeColor() {\n    return this._themeColor;\n  }\n  /**\n   * Specifies the size of the Icon.\n   *\n   * The possible values are:\n   * * `default` (Default) (Font-size: 16px; Width: 16px; Height: 16px)\n   * * `xsmall` (Font-size: 12px; Width: 12px; Height: 12px;)\n   * * `small` (Font-size: 14px; Width: 14px; Height: 14px;)\n   * * `medium` (Font-size: 16px; Width: 16px; Height: 16px;)\n   * * `large` (Font-size: 20px; Width: 20px; Height: 20px;)\n   * * `xlarge` (Font-size: 24px; Width: 24px; Height: 24px;)\n   * * `xxlarge` (Font-size: 32px; Width: 32px; Height: 32px;)\n   * * `xxxlarge` (Font-size: 48px; Width: 48px; Height: 48px;)\n   *\n   */\n  set size(size) {\n    const currentClass = sizeClasses[this.size];\n    const newClass = sizeClasses[size];\n    const element = this.element.nativeElement;\n    this.renderer.removeClass(element, currentClass);\n    if (size && size !== 'default') {\n      this.renderer.addClass(element, newClass);\n    }\n    this._size = size;\n  }\n  get size() {\n    return this._size;\n  }\n}\nIconBaseDirective.ɵfac = function IconBaseDirective_Factory(t) {\n  return new (t || IconBaseDirective)(i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(i0.Renderer2));\n};\nIconBaseDirective.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n  type: IconBaseDirective,\n  selectors: [[\"\", \"kendoIconBase\", \"\"]],\n  hostVars: 4,\n  hostBindings: function IconBaseDirective_HostBindings(rf, ctx) {\n    if (rf & 2) {\n      i0.ɵɵclassProp(\"k-flip-h\", ctx.horizontalFlip)(\"k-flip-v\", ctx.verticalFlip);\n    }\n  },\n  inputs: {\n    flip: \"flip\",\n    themeColor: \"themeColor\",\n    size: \"size\"\n  }\n});\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(IconBaseDirective, [{\n    type: Directive,\n    args: [{\n      selector: '[kendoIconBase]'\n    }]\n  }], function () {\n    return [{\n      type: i0.ElementRef\n    }, {\n      type: i0.Renderer2\n    }];\n  }, {\n    horizontalFlip: [{\n      type: HostBinding,\n      args: ['class.k-flip-h']\n    }],\n    verticalFlip: [{\n      type: HostBinding,\n      args: ['class.k-flip-v']\n    }],\n    flip: [{\n      type: Input\n    }],\n    themeColor: [{\n      type: Input\n    }],\n    size: [{\n      type: Input\n    }]\n  });\n})();\n\n/**\n * Represents the Kendo UI Icon component for Angular.\n */\nclass IconComponent extends IconBaseDirective {\n  constructor(element, renderer) {\n    super(element, renderer);\n    this.element = element;\n    this.renderer = renderer;\n    this.hostClass = true;\n    this.hostAriaHidden = true;\n  }\n  /**\n   * Defines the name for an existing icon in a Kendo UI theme, which will be rendered.\n   * All [Kendo UI Icons](slug:icon_list) are supported.\n   */\n  set name(name) {\n    if (isDocumentAvailable()) {\n      const newName = name !== this._name;\n      if (newName) {\n        const element = this.element.nativeElement;\n        this.renderer.removeClass(element, `k-i-${this.name}`);\n        this.renderer.addClass(element, `k-i-${name}`);\n      }\n    }\n    this._name = name;\n  }\n  get name() {\n    return this._name;\n  }\n}\nIconComponent.ɵfac = function IconComponent_Factory(t) {\n  return new (t || IconComponent)(i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(i0.Renderer2));\n};\nIconComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: IconComponent,\n  selectors: [[\"kendo-icon\"]],\n  hostVars: 5,\n  hostBindings: function IconComponent_HostBindings(rf, ctx) {\n    if (rf & 2) {\n      i0.ɵɵattribute(\"aria-hidden\", ctx.hostAriaHidden);\n      i0.ɵɵclassProp(\"k-icon\", ctx.hostClass)(\"k-font-icon\", ctx.hostClass);\n    }\n  },\n  inputs: {\n    name: \"name\"\n  },\n  exportAs: [\"kendoIcon\"],\n  features: [i0.ɵɵInheritDefinitionFeature],\n  decls: 0,\n  vars: 0,\n  template: function IconComponent_Template(rf, ctx) {},\n  encapsulation: 2\n});\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(IconComponent, [{\n    type: Component,\n    args: [{\n      exportAs: 'kendoIcon',\n      selector: 'kendo-icon',\n      template: ''\n    }]\n  }], function () {\n    return [{\n      type: i0.ElementRef\n    }, {\n      type: i0.Renderer2\n    }];\n  }, {\n    hostClass: [{\n      type: HostBinding,\n      args: ['class.k-icon']\n    }, {\n      type: HostBinding,\n      args: ['class.k-font-icon']\n    }],\n    hostAriaHidden: [{\n      type: HostBinding,\n      args: ['attr.aria-hidden']\n    }],\n    name: [{\n      type: Input\n    }]\n  });\n})();\nconst areSame = (i1, i2) => (i1 === null || i1 === void 0 ? void 0 : i1.name) === (i2 === null || i2 === void 0 ? void 0 : i2.name) && i1.content === i2.content && i1.viewBox === i2.viewBox;\n/**\n * Represents the Kendo UI SVG Icon component for Angular.\n */\nclass SVGIconComponent extends IconBaseDirective {\n  constructor(domSanitizer, element, renderer) {\n    super(element, renderer);\n    this.domSanitizer = domSanitizer;\n    this.element = element;\n    this.renderer = renderer;\n    this.hostClass = true;\n    this.hostAriaHidden = true;\n  }\n  /**\n   * Defines the SVG icon, which will be rendered. All [Kendo UI SVG Icons](slug:svgicon_list) are supported.\n   */\n  set icon(icon) {\n    var _a;\n    const element = this.element.nativeElement;\n    const hasDocument = isDocumentAvailable();\n    const newName = (icon === null || icon === void 0 ? void 0 : icon.name) && icon.name !== ((_a = this._icon) === null || _a === void 0 ? void 0 : _a.name);\n    if (this._icon && this._icon.name && newName && hasDocument) {\n      this.renderer.removeClass(element, `k-svg-i-${this._icon.name}`);\n    }\n    if (!areSame(icon, this._icon)) {\n      this._icon = icon;\n    }\n    if (hasDocument && newName) {\n      this.renderer.addClass(element, `k-svg-i-${this._icon.name}`);\n    }\n  }\n  get icon() {\n    return this._icon;\n  }\n  get content() {\n    return this.domSanitizer.bypassSecurityTrustHtml(this.icon.content);\n  }\n  get visible() {\n    return this.icon && isDocumentAvailable();\n  }\n  ngOnInit() {\n    this.verifyIconProperty();\n  }\n  verifyIconProperty() {\n    if (!isDevMode()) {\n      return;\n    }\n    if (!this._icon) {\n      throw new Error(`\n                Invalid configuration.\n                The input [icon] is required for the Kendo UI SVG Icon component for Angular.\n                See https://www.telerik.com/kendo-angular-ui/components/icons/svg-icon\n            `);\n    }\n  }\n}\nSVGIconComponent.ɵfac = function SVGIconComponent_Factory(t) {\n  return new (t || SVGIconComponent)(i0.ɵɵdirectiveInject(i1.DomSanitizer), i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(i0.Renderer2));\n};\nSVGIconComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: SVGIconComponent,\n  selectors: [[\"kendo-svg-icon\"], [\"kendo-svgicon\"]],\n  hostVars: 5,\n  hostBindings: function SVGIconComponent_HostBindings(rf, ctx) {\n    if (rf & 2) {\n      i0.ɵɵattribute(\"aria-hidden\", ctx.hostAriaHidden);\n      i0.ɵɵclassProp(\"k-svg-icon\", ctx.hostClass)(\"k-icon\", ctx.hostClass);\n    }\n  },\n  inputs: {\n    icon: \"icon\"\n  },\n  exportAs: [\"kendoSVGIcon\"],\n  features: [i0.ɵɵInheritDefinitionFeature],\n  decls: 1,\n  vars: 1,\n  consts: [[\"xmlns\", \"http://www.w3.org/2000/svg\", 0, \"xmlns\", \"xlink\", \"http://www.w3.org/1999/xlink\", 3, \"pointerEvents\", \"innerHTML\", 4, \"ngIf\"], [\"xmlns\", \"http://www.w3.org/2000/svg\", 0, \"xmlns\", \"xlink\", \"http://www.w3.org/1999/xlink\", 3, \"innerHTML\"]],\n  template: function SVGIconComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵtemplate(0, SVGIconComponent__svg_svg_0_Template, 1, 4, \"svg\", 0);\n    }\n    if (rf & 2) {\n      i0.ɵɵproperty(\"ngIf\", ctx.visible);\n    }\n  },\n  dependencies: [i3.NgIf],\n  encapsulation: 2,\n  changeDetection: 0\n});\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(SVGIconComponent, [{\n    type: Component,\n    args: [{\n      exportAs: 'kendoSVGIcon',\n      selector: 'kendo-svg-icon, kendo-svgicon',\n      template: `\n        <svg [style.pointerEvents]=\"'none'\" *ngIf=\"visible\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\"\n            [attr.viewBox]=\"icon.viewBox\" [innerHTML]=\"content\">\n        </svg>`,\n      changeDetection: ChangeDetectionStrategy.OnPush\n    }]\n  }], function () {\n    return [{\n      type: i1.DomSanitizer\n    }, {\n      type: i0.ElementRef\n    }, {\n      type: i0.Renderer2\n    }];\n  }, {\n    hostClass: [{\n      type: HostBinding,\n      args: ['class.k-svg-icon']\n    }, {\n      type: HostBinding,\n      args: ['class.k-icon']\n    }],\n    hostAriaHidden: [{\n      type: HostBinding,\n      args: ['attr.aria-hidden']\n    }],\n    icon: [{\n      type: Input\n    }]\n  });\n})();\n\n/**\n * @hidden\n */\nconst isPresent = value => value !== null && value !== undefined;\n\n/**\n * A token that specifies the [IconSettings](slug:api_icons_iconsettings) of the Kendo UI for Angular components ([see example](slug:icon_settings#toc-icons-configuration)).\n *\n * ```ts\n * import { NgModule } from '@angular/core';\n *\n * @NgModule({\n * ...\n * providers: [{ provide: ICON_SETTINGS, useValue: { type: 'svg', size: 'xsmall' }}]\n * })\n * export class AppModule {}\n * ```\n *\n */\nconst ICON_SETTINGS = new InjectionToken('Kendo UI Icon-Settings token');\n\n/**\n * A service that returns the current icon settings to be used in subscribers.\n * Use the public `notify` method to change the icon settings dynamically.\n */\nclass IconSettingsService {\n  constructor() {\n    /**\n     * @hidden\n     */\n    this.changes = new Subject();\n  }\n  /**\n   * Notifies subscribers that the icon settings were changed.\n   *\n   * @param iconSettings - (Optional) A new value for the [icon settings token]({% slug api_icons_icon_settings %}).\n   */\n  notify(iconSettings) {\n    this.changes.next(iconSettings);\n  }\n  /**\n   * Returns the [`SVGIcon`](slug:api_icons_svgicon) object for the provided key.\n   * Override in a custom service to provide custom SVG icons.\n   *\n   * @hidden\n   */\n  getSvgIcon(_name) {\n    return null;\n  }\n  /**\n   * Returns the list of classes to be rendered on the host `SPAN` element of custom font icons.\n   * Override in a custom service to provide classes for custom font icons.\n   *\n   * @hidden\n   */\n  getCustomFontIconClass(_key) {\n    return null;\n  }\n}\nIconSettingsService.ɵfac = function IconSettingsService_Factory(t) {\n  return new (t || IconSettingsService)();\n};\nIconSettingsService.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n  token: IconSettingsService,\n  factory: IconSettingsService.ɵfac\n});\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(IconSettingsService, [{\n    type: Injectable\n  }], null, null);\n})();\n\n/**\n * @hidden\n */\nclass IconsService {\n  constructor(_iconSettings, iconSettingsService) {\n    this._iconSettings = _iconSettings;\n    this.iconSettingsService = iconSettingsService;\n    /**\n     * Notifies subscribers of the initial icon settings, and upon each call to `notify`.\n     */\n    this.changes = new BehaviorSubject(this.iconSettings || {\n      type: 'svg'\n    });\n    this.subs = new Subscription();\n    if (iconSettingsService) {\n      this.subs.add(iconSettingsService.changes.pipe(map(iconSettings => isPresent(iconSettings) ? iconSettings : this._iconSettings), tap(iconSettings => this._iconSettings = iconSettings)).subscribe(iconSettings => this.changes.next(iconSettings)));\n    }\n  }\n  /**\n   * @hidden\n   */\n  get iconSettings() {\n    return this._iconSettings;\n  }\n  ngOnDestroy() {\n    this.subs.unsubscribe();\n  }\n  /**\n   * Returns the [`SVGIcon`](slug:api_icons_svgicon) object for the provided key.\n   * Override in a custom service to provide custom SVG icons.\n   */\n  getSvgIcon(name) {\n    const customIcon = this.iconSettingsService && this.iconSettingsService.getSvgIcon(name);\n    return customIcon;\n  }\n  /**\n   * Returns the list of classes to be rendered on the host `SPAN` element of custom font icons.\n   * Override in a custom service to provide classes for custom font icons.\n   */\n  getCustomFontIconClass(key) {\n    const customClass = this.iconSettingsService && this.iconSettingsService.getCustomFontIconClass(key);\n    return customClass;\n  }\n}\nIconsService.ɵfac = function IconsService_Factory(t) {\n  return new (t || IconsService)(i0.ɵɵinject(ICON_SETTINGS, 8), i0.ɵɵinject(IconSettingsService, 8));\n};\nIconsService.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n  token: IconsService,\n  factory: IconsService.ɵfac\n});\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(IconsService, [{\n    type: Injectable\n  }], function () {\n    return [{\n      type: undefined,\n      decorators: [{\n        type: Optional\n      }, {\n        type: Inject,\n        args: [ICON_SETTINGS]\n      }]\n    }, {\n      type: IconSettingsService,\n      decorators: [{\n        type: Optional\n      }]\n    }];\n  }, null);\n})();\n\n/**\n * @hidden\n */\nclass IconWrapperComponent {\n  constructor(iconsService) {\n    this.iconsService = iconsService;\n    this.hostClass = true;\n    /**\n     * Provided by consuming components in case an additional k-specific class needs to be rendered\n     * on the internal Icon component.\n     */\n    this.innerCssClass = '';\n    /**\n     * Provided by consuming components in case a custom font icon class is set\n     * by the developer using the consuming component through its API.\n     */\n    this.customFontClass = '';\n    this.subs = new Subscription();\n    this.subs = iconsService.changes.subscribe(iconSettings => {\n      this.iconSettings = iconSettings;\n    });\n  }\n  get customClasses() {\n    const classes = [this.customFontClass, this.innerCssClass, this.customFontIconClass].filter(cl => !!cl).join(' ');\n    return classes;\n  }\n  get hasSvgIcon() {\n    this.svgIcon = this.iconsService.getSvgIcon(this.name) || this.svgIcon;\n    if (this.svgIcon) {\n      return true;\n    }\n    if (isDevMode()) {\n      console.groupCollapsed(`Kendo UI for Angular: Icon type is set to 'svg', but only font icon name is provided. The \"${this.name}\" font icon will be rendered instead.`);\n      console.warn(`\nStarting from v7.0.0 (October, 2023) of the Kendo Themes, the font icons will be removed from the theme.\n* To render an SVG icon, update the component configuration by setting the \"svgIcon\" input to the respective icon definition.\n* To continue to use font icons, install the \"@progress/kendo-font-icons\" package and import \"@progress/kendo-font-icons/dist/index.css\".\n\nPlease note, that font icons are not compatible with a strict Content Security Policy and require the use of the \"unsafe-inline\" override.\n\nFor further details, check the following documentation articles:\nhttps://www.telerik.com/kendo-angular-ui/components/icons/icon-settings\nhttps://www.telerik.com/kendo-angular-ui/components/styling/icons/\nhttps://www.telerik.com/kendo-angular-ui/components/styling/svg-icons/\nhttps://www.telerik.com/design-system/docs/foundation/iconography/font-icons/\nhttps://www.telerik.com/design-system/docs/foundation/iconography/icon-list/\n            `);\n      console.groupEnd();\n    }\n    return false;\n  }\n  get customFontIconClass() {\n    return this.iconsService.getCustomFontIconClass(this.name) || this.customFontClass;\n  }\n  ngOnDestroy() {\n    this.subs.unsubscribe();\n  }\n}\nIconWrapperComponent.ɵfac = function IconWrapperComponent_Factory(t) {\n  return new (t || IconWrapperComponent)(i0.ɵɵdirectiveInject(IconsService));\n};\nIconWrapperComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: IconWrapperComponent,\n  selectors: [[\"kendo-icon-wrapper\"]],\n  hostVars: 2,\n  hostBindings: function IconWrapperComponent_HostBindings(rf, ctx) {\n    if (rf & 2) {\n      i0.ɵɵclassProp(\"k-icon-wrapper-host\", ctx.hostClass);\n    }\n  },\n  inputs: {\n    name: \"name\",\n    svgIcon: \"svgIcon\",\n    innerCssClass: \"innerCssClass\",\n    customFontClass: \"customFontClass\",\n    size: \"size\"\n  },\n  exportAs: [\"kendoIconWrapper\"],\n  decls: 3,\n  vars: 2,\n  consts: [[\"font\", \"\"], [\"custom\", \"\"], [3, \"ngClass\", \"icon\", \"size\", \"themeColor\", \"flip\", 4, \"ngIf\", \"ngIfElse\"], [3, \"ngClass\", \"icon\", \"size\", \"themeColor\", \"flip\"], [3, \"ngClass\", \"name\", \"size\", \"themeColor\", \"flip\", 4, \"ngIf\", \"ngIfElse\"], [3, \"ngClass\", \"name\", \"size\", \"themeColor\", \"flip\"], [3, \"ngClass\"]],\n  template: function IconWrapperComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵtemplate(0, IconWrapperComponent_kendo_svgicon_0_Template, 1, 5, \"kendo-svgicon\", 2)(1, IconWrapperComponent_ng_template_1_Template, 3, 2, \"ng-template\", null, 0, i0.ɵɵtemplateRefExtractor);\n    }\n    if (rf & 2) {\n      const font_r3 = i0.ɵɵreference(2);\n      i0.ɵɵproperty(\"ngIf\", (ctx.iconSettings == null ? null : ctx.iconSettings.type) === \"svg\" && ctx.hasSvgIcon)(\"ngIfElse\", font_r3);\n    }\n  },\n  dependencies: [IconComponent, i3.NgClass, i3.NgIf, SVGIconComponent],\n  encapsulation: 2\n});\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(IconWrapperComponent, [{\n    type: Component,\n    args: [{\n      exportAs: 'kendoIconWrapper',\n      selector: 'kendo-icon-wrapper',\n      template: `\n        <kendo-svgicon\n            *ngIf=\"iconSettings?.type === 'svg' && hasSvgIcon; else font\"\n            [ngClass]=\"innerCssClass\"\n            [icon]=\"svgIcon\"\n            [size]=\"size || iconSettings?.size\"\n            [themeColor]=\"iconSettings?.themeColor\"\n            [flip]=\"iconSettings?.flip\"></kendo-svgicon>\n        <ng-template #font>\n            <kendo-icon\n                *ngIf=\"!customFontIconClass; else custom\"\n                [ngClass]=\"innerCssClass\"\n                [name]=\"name\"\n                [size]=\"size || iconSettings?.size\"\n                [themeColor]=\"iconSettings?.themeColor\"\n                [flip]=\"iconSettings?.flip\"></kendo-icon>\n            <ng-template #custom>\n                <span [ngClass]=\"customClasses\"></span>\n            </ng-template>\n        </ng-template>\n    `\n    }]\n  }], function () {\n    return [{\n      type: IconsService\n    }];\n  }, {\n    hostClass: [{\n      type: HostBinding,\n      args: ['class.k-icon-wrapper-host']\n    }],\n    name: [{\n      type: Input\n    }],\n    svgIcon: [{\n      type: Input\n    }],\n    innerCssClass: [{\n      type: Input\n    }],\n    customFontClass: [{\n      type: Input\n    }],\n    size: [{\n      type: Input\n    }]\n  });\n})();\nconst exportedModules$2 = [IconComponent];\nconst declarations$2 = [...exportedModules$2];\n/**\n * Represents the [NgModule](link:site.data.urls.angular['ngmoduleapi'])\n * definition for the Icon component.\n *\n * @example\n *\n * ```ts-no-run\n * // Import the Icon module\n * import { IconModule } from '@progress/kendo-angular-icons';\n *\n * // The browser platform with a compiler\n * import { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n *\n * import { NgModule } from '@angular/core';\n *\n * // Import the app component\n * import { AppComponent } from './app.component';\n *\n * // Define the app module\n * _@NgModule({\n *     declarations: [AppComponent], // declare app component\n *     imports:      [BrowserModule, IconModule], // import Icon module\n *     bootstrap:    [AppComponent]\n * })\n * export class AppModule {}\n *\n * // Compile and launch the module\n * platformBrowserDynamic().bootstrapModule(AppModule);\n *\n * ```\n */\nclass IconModule {}\nIconModule.ɵfac = function IconModule_Factory(t) {\n  return new (t || IconModule)();\n};\nIconModule.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n  type: IconModule,\n  declarations: [IconComponent],\n  imports: [CommonModule],\n  exports: [IconComponent, CommonModule]\n});\nIconModule.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n  imports: [CommonModule, CommonModule]\n});\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(IconModule, [{\n    type: NgModule,\n    args: [{\n      declarations: [declarations$2],\n      exports: [exportedModules$2, CommonModule],\n      imports: [CommonModule]\n    }]\n  }], null, null);\n})();\nconst exportedModules$1 = [SVGIconComponent];\nconst declarations$1 = [...exportedModules$1];\n/**\n * Represents the [NgModule](link:site.data.urls.angular['ngmoduleapi'])\n * definition for the SVG Icon component.\n *\n * @example\n *\n * ```ts-no-run\n * // Import the SVG Icon module\n * import { SVGIconModule } from '@progress/kendo-angular-icons';\n *\n * // The browser platform with a compiler\n * import { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n *\n * import { NgModule } from '@angular/core';\n *\n * // Import the app component\n * import { AppComponent } from './app.component';\n *\n * // Define the app module\n * _@NgModule({\n *     declarations: [AppComponent], // declare app component\n *     imports:      [BrowserModule, SVGIconModule], // import SVG Icon module\n *     bootstrap:    [AppComponent]\n * })\n * export class AppModule {}\n *\n * // Compile and launch the module\n * platformBrowserDynamic().bootstrapModule(AppModule);\n *\n * ```\n */\nclass SVGIconModule {}\nSVGIconModule.ɵfac = function SVGIconModule_Factory(t) {\n  return new (t || SVGIconModule)();\n};\nSVGIconModule.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n  type: SVGIconModule,\n  declarations: [SVGIconComponent],\n  imports: [CommonModule],\n  exports: [SVGIconComponent]\n});\nSVGIconModule.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n  imports: [CommonModule]\n});\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(SVGIconModule, [{\n    type: NgModule,\n    args: [{\n      declarations: [declarations$1],\n      exports: [exportedModules$1],\n      imports: [CommonModule]\n    }]\n  }], null, null);\n})();\nconst exportedModules = [IconWrapperComponent];\nconst declarations = [...exportedModules];\n/**\n * Represents the [NgModule](link:site.data.urls.angular['ngmoduleapi'])\n * definition for the Icons components.\n *\n * @example\n *\n * ```ts-no-run\n * // Import the Icons module\n * import { IconsModule } from '@progress/kendo-angular-icons';\n *\n * // The browser platform with a compiler\n * import { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n *\n * import { NgModule } from '@angular/core';\n *\n * // Import the app component\n * import { AppComponent } from './app.component';\n *\n * // Define the app module\n * _@NgModule({\n *     declarations: [AppComponent], // declare app component\n *     imports:      [BrowserModule, IconsModule], // import Icons module\n *     bootstrap:    [AppComponent]\n * })\n * export class AppModule {}\n *\n * // Compile and launch the module\n * platformBrowserDynamic().bootstrapModule(AppModule);\n *\n * ```\n */\nclass IconsModule {}\nIconsModule.ɵfac = function IconsModule_Factory(t) {\n  return new (t || IconsModule)();\n};\nIconsModule.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n  type: IconsModule,\n  declarations: [IconWrapperComponent],\n  imports: [IconModule, SVGIconModule],\n  exports: [IconModule, SVGIconModule, IconWrapperComponent]\n});\nIconsModule.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n  providers: [IconsService],\n  imports: [IconModule, SVGIconModule, IconModule, SVGIconModule]\n});\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(IconsModule, [{\n    type: NgModule,\n    args: [{\n      declarations,\n      imports: [IconModule, SVGIconModule],\n      exports: [IconModule, SVGIconModule, exportedModules],\n      providers: [IconsService]\n    }]\n  }], null, null);\n})();\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { ICON_SETTINGS, IconComponent, IconModule, IconSettingsService, IconWrapperComponent, IconsModule, IconsService, SVGIconComponent, SVGIconModule };"],
  "mappings": "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",
  "names": []
}
